#!/bin/bash
#BSUB -L /bin/bash
#BSUB -J COWWID
#BSUB -u "ivan.topolsky@bsse.ethz.ch pelin.icer@bsse.ethz.ch david.dreifuss@bsse.ethz.ch" # singer@nexus.ethz.ch carrara@nexus.ethz.ch" # kim.jablonski@bsse.ethz.ch
#BSUB -N
#BSUB -n 1
#BSUB -M 8192
#BSUB -R 'rusage[mem=8192]'
##### -M 4096
##### -R rusage[mem=4096]
#BSUB -W 4:00

BATCH=
PROTO=v4

umask 0007

#
# Input validator
#
validateBatchName() {
	if [[ "$1" =~ ^(20[0-9][0-9][0-1][0-9][0-3][0-9]_[[:alnum:]-]{4,})$ ]]; then
		return;
	else
		echo "bad batchname ${1}"
		exit 1;
	fi
}

#
# Proto validate + specific files
#
case "${PROTO}" in
	v3)	bedfile="cojac/nCoV-2019.insert.${PROTO^^}.bed"	;;
	v4)	bedfile="cojac/SARS-CoV-2.insert.${PROTO^^}.txt"	;;
	*)
		echo "bad proto ${PROTO}"
		exit 1;
	;;
esac
allprototsv=( working/samples.wastewateronly.{v3,v4}.tsv )
if [[ ! -r "${bedfile}" ]]; then
	echo "missing bedfile ${bedfile}"
	exit 1;
fi



. /cluster/project/pangolin/miniconda3/bin/activate 'cojac'

if [[ -n "${BATCH}" ]]; then
	echo "only on batch ${BATCH}"
	validateBatchName "${BATCH}"
	# check existing
	if [[ ! -e "sampleset/samples.${BATCH}.tsv" ]]; then
		echo "Cannot find batch ${BATCH}" >&2
		exit 1
	fi

	# 'lastweek' backup
	if grep -qF "${BATCH}" working/ww-cooc${PROTO:+.${PROTO}}.yaml working/samples.wastewateronly${PROTO:+.${PROTO}}.tsv; then
		echo "using:"
		ls -l working/ww-cooc${PROTO:+.${PROTO}}{,.lastweek}.yaml working/samples.wastewateronly${PROTO:+.${PROTO}}{,.lastweek,.thisweek}.tsv
	else 
		echo "backing up lastweek:"
		cp -v working/samples.wastewateronly${PROTO:+.${PROTO}}{,.lastweek}.tsv
		cp -v working/ww-cooc${PROTO:+.${PROTO}}{,.lastweek}.yaml
	fi

		
	(grep -vP '^(Y\d{2,}|NC|\d{6,})' "sampleset/samples.${BATCH}.tsv" | tee working/samples.wastewateronly${PROTO:+.${PROTO}}.thisweek.tsv ; cat working/samples.wastewateronly${PROTO:+.${PROTO}}.lastweek.tsv) > working/samples.wastewateronly${PROTO:+.${PROTO}}.tsv
	cat "${allprototsv[@]}" > working/samples.wastewateronly.tsv

	#grep -hv 'KLZHCoV' sampleset/samples.{20210612_JN9YY,20210604_JN8TR,20210528_JN9WM}.tsv > ${SAM}
	#grep -hP '(?P<plant>\d+)_(?P<year>20\d{2})_(?:(?:(?P<month>[01]?\d)_(?P<day>[0-3]?\d))|(?:R_(?P<repeat>\d+)))'  sampleset/samples.{20210612_JN9YY,20210604_JN8TR,20210528_JN9WM}.tsv > ${SAM}
	#exec cojac/cooc-mutbamscan -s ${SAM} -p working/samples -m cojac/voc/ -b cojac/nCoV-2019.insert.bed -/ -j ww-sub.json -y ww-sub.yaml

	# run on latest batch only
	mkdir -p working/ww-cooc${PROTO:+-${PROTO}}/
	# to regenerate the YAML:	--vocdir cojac/voc/ --bedfile "${bedfile}" --out-amp "amplicons.${PROTO}.yaml"
	# to re-use previous YAML:	--in-amp "amplicons.${PROTO}.yaml"
	cojac/cooc-mutbamscan -s "working/samples.wastewateronly${PROTO:+.${PROTO}}.thisweek.tsv" -p working/samples --in-amp "amplicons.${PROTO}.yaml" -y "working/ww-cooc${PROTO:+-${PROTO}}/ww-cooc.${BATCH}.yaml" -/	&&
	cat "working/ww-cooc${PROTO:+-${PROTO}}/ww-cooc.${BATCH}.yaml" "working/ww-cooc${PROTO:+.${PROTO}}.lastweek.yaml" > "working/ww-cooc${PROTO:+.${PROTO}}.yaml"
else
	# run on whole wastewater collection
	cojac/cooc-mutbamscan -s "working/samples.wastewateronly${PROTO:+.${PROTO}}.tsv" -p working/samples --vocdir cojac/voc/ --bedfile "${bedfile}" --out-amp "amplicons.${PROTO}.yaml" -y "working/ww-cooc${PROTO:+.${PROTO}}.yaml" -/
fi &&
exec cojac/cooc-tabmut -y "working/ww-cooc${PROTO:+.${PROTO}}.yaml" -o "working/ww-cooc${PROTO:+.${PROTO}}.csv" -m -l -/
